<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="lblProyectosGuardados.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgAgregar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAMRSURBVEhLrdRZTFRnFMDxq7XWtU/G+NA3H5syvPhgUhvXVKNNXVLjSiwGqyJFUEeQ6gjTQQZB
        VoelUwoyoYAIgkqtCBaXuevMHWaGRXEhpolpjDHRNn38e2fkBRgLjfck5+n78v2Sc75zhKnEp3nzP3/0
        bz9D/+iE/pbxvb6N/Oomo8fmRNuDWsLP/Oh/SihPe7k30sUfTzqJy/tYH73y/tF4vxL16R28I930Pv6N
        m486uD7cYi5yYbCEO49v0PPwKr8Pt3L1fiNtQ3XmIu4BJ13Dl+l80Ez7kIeWwRp+HagwF3H153BlqIHW
        wVqa+qvxhMv4JVRoLlIcOsHFfjcNYRd1oWLcwXwq+uzmIvnBdOqDpfzcV0Bln4OygI1zeqa5iD2QTHXA
        yXk9h2J/Fmf9x8j1p04d+Sx3vvUno7EV4R8pD9mIlKYgaCUvkIYjkEK2vp+SkUxK/TYKfRnk+dKw+5I5
        pSWxT/qSRHElCeIXWLo+GJudM7C0f8hi27yFQvfLVq4PXKIj3MClYC2NfdXUB8qp0c9R5TtDuS+bIi2L
        fO0oDjWF0+p3ZKnfYlV3cFjbQrL2VfTR+B4je6cTf28a8ZKRqkC8JhDXNBPh2gsPbcELNAfceHQXtf5i
        qn1OXJqdEvUkBepxcpXDZCsH+UHZy3FlN+nKVlKUjexX1/0nEEU8sxBanlfRoFdR5yvFrRVSoRqNVYzG
        Kpk45SPY5RROSfvIlPdwVN5OqryZg/IGkpQ1Y4G7E4EoUjMbwfNXETVaEVWqk3LFTpFslEay4pBSOS0e
        IEtMxCruIk36hkPS10Yf1pIor8ByYxwgTgSiSOUcBPczBy7ZQYlko0DM4IyYTo43mZPeJDK8CRzxbuN7
        7yYOiOvZK64mQVr2FuieHIgiZXPfbmvjK0a+4ztz1a1P2ONdzk5x6ZgSxbo7PqPAVGJ5zyK2eZdM6MH/
        emSyWNazYGKTjRKZisQCIj0wH4kA4wfNdCTWoJmOxBo0UxFj2cWaA3MRY5uOB0xHIus6AlmaP8JSPwuL
        ezZx50cnedIQhDcxc8PR2iKzewAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="imgEditar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAACXSURBVEhLvY1RCsUgEAO9/6FLEd5CCNm0sfoG/HB0Z8dGrt85Ri04uoiXbF2EMV6Cb8uoGDp+
        W0bF0KGP4GEVVO413aCKqn+PqIi6o4twwc5HuBD6QjkLh+re+Zgu5HyEC3U+woU6H+FCnY9woc7H4CCG
        yk2Ui+BBjtWd/73mafjzgokLbFkw4QiG+W0JFcSzhWPhPzLGDfo5pbPi6F86AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="imgBorrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAGoSURBVEhL1VRJboNAEIRsdux4eUIUGefAkYOFuHCwLHHwkYfkB/w0Thw5zvIH0jXTA+POoEDC
        JSWVbJqeKhUN7WVZNjVM0/SGOCReeJ53RqzwPglKQy61B8RXq5Uy2G63oyiKLqns67sax9FiZ5t0NrIT
        sMFJAkAadDYxCQ508I3pEu3C/eAuYHkNJChu0+GRbvZlArK8BplgyH5f4oZavca3Gfx/uGJ3JUs1w3Wo
        K1mqGa5DXclSFYqiOJ25q1nW7GtXDdcWfP7Aa7iaZe1jvHiQNXkNIEGe51dxHF9zScPVLGstTXx8f9gk
        SZJMuKbhaG5tYrYFEoRhqBJgZWE3oqeCPAzI2k8mmMFmsxkjAbZ7byYQx+7DksUuNAnA9Xo9Q08FeRiQ
        tSYTGOxnQWkn+LOJeTyYgTKYBuXTbFna4iD+KyEDKQjImjTBDJAABrs+TSBuz0AZzDVtcfBXr7BJcKDH
        80wJMGQkaDLBm6aEDGxBSSOOBK/EF56BEd/N7xXtBDBAUpav4TIAqwREewZNJjCg3wGtlnOWPoUUbpPg
        cb78lAm0ged/AdGz2TTuHw9BAAAAAElFTkSuQmCC
</value>
  </data>
</root>